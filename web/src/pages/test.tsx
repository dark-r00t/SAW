import type { NextPage } from "next";
import Head from "next/head";
import { useState  } from "react";
import { signIn, signOut, useSession } from "next-auth/react";

const test: NextPage = () => {
    
    const [disabled, setDisabled] = useState(false);
    const [prompt, setPrompt] = useState("");
    const [url, setURL] = useState("");
    const QueueTaskUrl = "http://sb.bap.pw/sb/async"
    const GetTaskStatusUrl = "http://sb.bap.pw/sb/task/"

    const get_image = (e: Event) => {
        e.preventDefault() // prevents page reload
        setDisabled(!disabled)
        fetch(QueueTaskUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({prompt: prompt})
        })
        .then((res) => res.json())
        .then((data) => {
            pollTask(data.task_id)

        })
    }

    const pollTask = (task_id:string) => {
        fetch(GetTaskStatusUrl+task_id, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
        })
        .then((res) => res.json())
        .then((data) => {
            const taskStatus = data.task_status;
            //console.log(data)
            if (taskStatus === 'SUCCESS') 
            {
            setURL(data.task_result)
            setDisabled(false)
            return true
            }
            if (taskStatus === 'failed') return false;
            //console.log(data.task_id)
            setTimeout(function() {
            pollTask(data.task_id);
            }, 5000);
        })
    }

    const {data} = useSession();
    //check session...
    //if(!data)
    //    return (
    //    <>
    //    <div className="mx-auto text-center justify-center items-center min-h-screen">
    //    <h1>Protected Page</h1>
    //    <p>You need to sign in to use this app.</p>
    //    <button className="bg-black p-2 text-white" onClick={()=>signIn()}>Sign in</button>
    //    </div>
    //   </>
    //    )
    return (
        <main className="flex bg-black mx-auto items-center justify-center min-h-screen p-4">
        <Head>
            <title>Stable diffusion</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className=" flex-auto">
        <div className="relative w-6/12 mx-auto"> 
        <div className="absolute inset-0 bg-gradient-to-r from-pink-600 to-purple-600 rounded-lg blur opacity-75"></div>
        <form onSubmit= {get_image}>
            <div className='relative justify-center items-center'>
            <span className="absolute inset-y-0 left-0 flex items-center pl-2">
            <button type="submit" className="p-1 focus:outline-none focus:shadow-outline" disabled={disabled}>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="#db2777" className="w-6 h-6">
    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
    </svg>
            </button>
            </span>
            <input className='bg-black  shadow-inner rounded-lg leading-none pl-12 p-4 w-full text-white' id='search' type='search' placeholder='Enter prompt...' 
            disabled={disabled}
            onChange={event => setPrompt(event.target.value)}
            />
        </div>
        </form>
        </div>
        <div className="justify-center items-center p-20"  style={{
            display: disabled?"block":"none"
            }}>
            <div className="flex items-center justify-center space-x-2 animate-bounce">
            <div className="w-8 h-8 bg-purple-600 rounded-full"></div>
            <div className="w-8 h-8 bg-purple-600 rounded-full"></div>
            <div className="w-8 h-8 bg-purple-600 rounded-full"></div>
            </div>
            </div>
        <span className="sr-only">Loading...</span>
        <div>
            <img className="mx-auto object-center p-12"
            src={url} alt="" />
            </div>
        </div>
        
        </main>
    );
};

export default test;
