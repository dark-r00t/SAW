import Head from "next/head";
import { signIn, useSession } from "next-auth/react";
import { SyntheticEvent, useState } from "react";

export default function Test() {
  //#region Hooks

  const [disabled, setDisabled] = useState(false);
  const [prompt, setPrompt] = useState("");
  const [url, setURL] = useState("");

  //#endregion

  //#region Handlers

  const get_image = (e: SyntheticEvent) => {
    e.preventDefault(); // prevents page reload
    setDisabled(!disabled);
    void fetch("/api/createPost?prompt=" + prompt, {})
      .then((res) => res.json())
      .then((data: { image: string }) => {
        setURL(data.image);
        setDisabled(false);
      });
  };

  //#endregion

  //check session...
  const { data } = useSession();

  if (!data)
    return (
      <>
        <div className="mx-auto min-h-screen items-center justify-center text-center">
          <h1>Protected Page</h1>
          <p>You need to sign in to use this app.</p>
          <button
            className="bg-black p-2 text-white"
            onClick={() => void signIn()}
          >
            Sign in
          </button>
        </div>
      </>
    );

  return (
    <main className="mx-auto flex min-h-screen items-center justify-center bg-black p-4">
      <Head>
        <title>Stable diffusion</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className=" flex-auto">
        <div className="relative mx-auto w-6/12">
          <div className="absolute inset-0 rounded-lg bg-gradient-to-r from-pink-600 to-purple-600 opacity-75 blur"></div>
          <form onSubmit={get_image}>
            <div className="relative items-center justify-center">
              <span className="absolute inset-y-0 left-0 flex items-center pl-2">
                <button
                  type="submit"
                  className="p-1 focus:outline-none"
                  disabled={disabled}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    strokeWidth="1.5"
                    stroke="#db2777"
                    className="h-6 w-6"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    />
                  </svg>
                </button>
              </span>
              <input
                className="w-full  rounded-lg bg-black p-4 pl-12 leading-none text-white shadow-inner"
                id="search"
                type="search"
                placeholder="Enter prompt..."
                disabled={disabled}
                onChange={(event) => setPrompt(event.target.value)}
              />
            </div>
          </form>
        </div>
        <div
          className="items-center justify-center p-20"
          style={{
            display: disabled ? "block" : "none",
          }}
        >
          <div className="flex animate-bounce items-center justify-center space-x-2">
            <div className="h-8 w-8 rounded-full bg-purple-600"></div>
            <div className="h-8 w-8 rounded-full bg-purple-600"></div>
            <div className="h-8 w-8 rounded-full bg-purple-600"></div>
          </div>
        </div>
        <span className="sr-only">Loading...</span>
        <div>
          <img className="mx-auto object-center p-12" src={url} alt="" />
        </div>
      </div>
    </main>
  );
}
